<?xml version="1.0"?>
<components:Editor xmlns:fx="http://ns.adobe.com/mxml/2009"
                   xmlns:s="library://ns.adobe.com/flex/spark"
                   xmlns:components="com.andrewgura.ui.components.*"
                   xmlns:mx="library://ns.adobe.com/flex/mx" xmlns:editor="com.andrewgura.ui.components.editor.*"
                   addedToStage="onAddedToStage(event)">

    <fx:Script><![CDATA[
        import com.andrewgura.controllers.MainController;
        import com.andrewgura.controllers.TCAController;
        import com.andrewgura.events.DataObjectEvent;
        import com.andrewgura.vo.ProjectVO;
        import com.andrewgura.vo.TCAProjectVO;
        import com.andrewgura.vo.TextureVO;

        [Bindable]
        private var controller:TCAController;
        [Bindable]
        public var selectedTexture:TextureVO;

        override public function set project(value:ProjectVO):void {
            if (super.project == value) return;
            super.project = value;
            controller = new TCAController(TCAProjectVO(project));
        }

        private function onAddedToStage(event:Event):void {
            this.addEventListener(NativeDragEvent.NATIVE_DRAG_ENTER, dragEnterHandler);
            this.addEventListener(NativeDragEvent.NATIVE_DRAG_DROP, dragDropHandler);
            addEventListener("renameTexture", onRenameTexture);
        }

        protected function dragDropHandler(event:NativeDragEvent):void {
            var dropFiles:Array = event.clipboard.getData(ClipboardFormats.FILE_LIST_FORMAT) as Array;
            MainController.importSelectedFiles(dropFiles);
        }

        protected function dragEnterHandler(event:NativeDragEvent):void {
            NativeDragManager.acceptDragDrop(this);
        }

        private function onRenameTexture(event:DataObjectEvent):void {
            var newName:String = controller.getNewNameForDuplicate(event.data.newName, TCAProjectVO(project).imageCollection.getItemIndex(event.data.texture));
            event.data.texture.name = newName;
            //sort
            TCAProjectVO(project).imageCollection.refresh();
        }

        private function updateProgress(...bindings):Object {
            progressBar.setProgress(TCAProjectVO(project).loadedPercent, 100);
            return null;
        }
        ]]>
    </fx:Script>

    <fx:Declarations>
        <fx:Object>
            {updateProgress(project, TCAProjectVO(project).isFullyLoaded, TCAProjectVO(project).loadedPercent)}
        </fx:Object>
    </fx:Declarations>

    <s:VGroup width="100%" height="100%"
              visible="{project}" includeInLayout="{project}">
        <s:HGroup width="100%" height="100%">
            <editor:TCAListControl id="tcaControl" width="400" height="100%"
                                   project="{project}" selectedTexture="@{selectedTexture}"
                                   tcaController="{controller}"/>
            <s:VGroup width="100%" height="100%"
                      gap="-1">
                <editor:TextureViewer width="100%" height="100%"
                                      texture="{selectedTexture}"/>
                <editor:TCAImageControl width="100%" texture="{selectedTexture}"
                                        tcaController="{controller}"/>
            </s:VGroup>
        </s:HGroup>

        <mx:ProgressBar width="100%" id="progressBar" minimum="0" maximum="0" mode="manual"
                        visible="{project &amp;&amp; !TCAProjectVO(project).isFullyLoaded}"
                        includeInLayout="{project &amp;&amp; !TCAProjectVO(project).isFullyLoaded}"/>

    </s:VGroup>

    <s:Label text="Welcome to TCAWorkshop.{'\n'}Create new project or open an existing one"
             horizontalCenter="0" verticalCenter="0"
             lineBreak="explicit" textAlign="center"
             visible="{!project}"/>

</components:Editor>
